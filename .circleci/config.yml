version: 2.1

workflows:
  version: 2
  
  debug-trigger:
    jobs:
      - debug-kaggle-api

jobs:
  debug-kaggle-api:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install Kaggle API
          command: pip install kaggle requests
      - run:
          name: Configure Kaggle Credentials
          command: |
            mkdir -p ~/.kaggle
            echo "{\"username\":\"${KAGGLE_USERNAME}\",\"key\":\"${KAGGLE_KEY}\"}" > ~/.kaggle/kaggle.json
            chmod 600 ~/.kaggle/kaggle.json
      - run:
          name: Test Kaggle API Connection
          command: |
            echo "🔍 Testing Kaggle API connection..."
            python -c "
import subprocess
import requests
import json
import os

# Test 1: List kernels to verify API works
print('📋 Test 1: Listing your kernels...')
result = subprocess.run(['kaggle', 'kernels', 'list', '--user', 'solomonoffor'], 
                       capture_output=True, text=True)
print(f'Exit code: {result.returncode}')
print(f'Output: {result.stdout}')
if result.stderr:
    print(f'Errors: {result.stderr}')

# Test 2: Check specific kernel status
print('\\n🔍 Test 2: Checking 10invisible kernel...')
result = subprocess.run(['kaggle', 'kernels', 'status', 'solomonoffor/10invisible'], 
                       capture_output=True, text=True)
print(f'Exit code: {result.returncode}')
print(f'Output: {result.stdout}')
if result.stderr:
    print(f'Errors: {result.stderr}')

# Test 3: Try to pull the notebook
print('\\n📥 Test 3: Pulling 10invisible notebook...')
os.makedirs('/tmp/debug_pull', exist_ok=True)
result = subprocess.run(['kaggle', 'kernels', 'pull', 'solomonoffor/10invisible', '-p', '/tmp/debug_pull'], 
                       capture_output=True, text=True)
print(f'Exit code: {result.returncode}')
print(f'Output: {result.stdout}')
if result.stderr:
    print(f'Errors: {result.stderr}')

# Check what files were pulled
print('\\n📁 Files pulled:')
if os.path.exists('/tmp/debug_pull'):
    for file in os.listdir('/tmp/debug_pull'):
        print(f'   - {file}')

# Test 4: Try to push (trigger execution)
print('\\n🚀 Test 4: Attempting to push/trigger...')
result = subprocess.run(['kaggle', 'kernels', 'push', '-p', '/tmp/debug_pull'], 
                       capture_output=True, text=True, timeout=60)
print(f'Exit code: {result.returncode}')
print(f'Output: {result.stdout}')
if result.stderr:
    print(f'Errors: {result.stderr}')
"
