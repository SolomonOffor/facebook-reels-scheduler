version: 2.1

workflows:
  version: 2
  
  system2-schedule:
    triggers:
      - schedule:
          cron: "0 0,4,8,12,16,20 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - trigger-10invisible

  system3-schedule:
    triggers:
      - schedule:
          cron: "0 2,6,10,14,18,22 * * *"
          filters:
            branches:
              only:
                - main
    jobs:
      - trigger-7unreliable

  manual-test:
    jobs:
      - trigger-10invisible
      - trigger-7unreliable

jobs:
  trigger-10invisible:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install Kaggle API
          command: pip install kaggle
      - run:
          name: Configure Kaggle Credentials
          command: |
            mkdir -p ~/.kaggle
            echo "{\"username\":\"${KAGGLE_USERNAME}\",\"key\":\"${KAGGLE_KEY}\"}" > ~/.kaggle/kaggle.json
            chmod 600 ~/.kaggle/kaggle.json
      - run:
          name: Trigger 10invisible via API
          command: |
            echo "ðŸš€ Direct API Trigger: 10invisible"
            python -c "
import subprocess
import time

# Create a simple metadata file
metadata = {
    'id': 'solomonoffor/10invisible',
    'title': '10invisible',
    'code_file': '10invisible.ipynb',
    'language': 'python',
    'kernel_type': 'notebook',
    'is_private': True,
    'enable_gpu': False,
    'enable_internet': True
}

import json
import os
os.makedirs('/tmp/simple_trigger', exist_ok=True)
with open('/tmp/simple_trigger/kernel-metadata.json', 'w') as f:
    json.dump(metadata, f)

# Create empty notebook file
open('/tmp/simple_trigger/10invisible.ipynb', 'w').close()

# Push to trigger execution
print('ðŸ“¤ Triggering 10invisible execution...')
result = subprocess.run(['kaggle', 'kernels', 'push', '-p', '/tmp/simple_trigger'], 
                       capture_output=True, text=True, timeout=300)
print(f'Exit code: {result.returncode}')
if result.stdout:
    print(f'Output: {result.stdout}')
if result.stderr:
    print(f'Errors: {result.stderr}')
"
          no_output_timeout: 5m
      - run:
          name: Status Check
          command: |
            echo "âœ… 10invisible TRIGGERED!"
            echo "ðŸ”— Check: https://www.kaggle.com/code/solomonoffor/10invisible/versions"

  trigger-7unreliable:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run:
          name: Install Kaggle API
          command: pip install kaggle
      - run:
          name: Configure Kaggle Credentials
          command: |
            mkdir -p ~/.kaggle
            echo "{\"username\":\"${KAGGLE_USERNAME}\",\"key\":\"${KAGGLE_KEY}\"}" > ~/.kaggle/kaggle.json
            chmod 600 ~/.kaggle/kaggle.json
      - run:
          name: Trigger 7unreliable via API
          command: |
            echo "ðŸš€ Direct API Trigger: 7unreliable"
            python -c "
import subprocess
import time

# Create a simple metadata file
metadata = {
    'id': 'solomonoffor/7unreliable',
    'title': '7unreliable',
    'code_file': '7unreliable.ipynb',
    'language': 'python',
    'kernel_type': 'notebook',
    'is_private': True,
    'enable_gpu': False,
    'enable_internet': True
}

import json
import os
os.makedirs('/tmp/simple_trigger_7', exist_ok=True)
with open('/tmp/simple_trigger_7/kernel-metadata.json', 'w') as f:
    json.dump(metadata, f)

# Create empty notebook file
open('/tmp/simple_trigger_7/7unreliable.ipynb', 'w').close()

# Push to trigger execution
print('ðŸ“¤ Triggering 7unreliable execution...')
result = subprocess.run(['kaggle', 'kernels', 'push', '-p', '/tmp/simple_trigger_7'], 
                       capture_output=True, text=True, timeout=300)
print(f'Exit code: {result.returncode}')
if result.stdout:
    print(f'Output: {result.stdout}')
if result.stderr:
    print(f'Errors: {result.stderr}')
"
          no_output_timeout: 5m
      - run:
          name: Status Check
          command: |
            echo "âœ… 7unreliable TRIGGERED!"
            echo "ðŸ”— Check: https://www.kaggle.com/code/solomonoffor/7unreliable/versions"
